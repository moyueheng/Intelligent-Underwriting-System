"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 3.2.18.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import sys
import os
from os.path import join as pjoin

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# 指定自定义的用户认证后端
AUTHENTICATION_BACKENDS = ["users.utils.UsernameMobileAuthBackend"]

# add app dir
sys.path.insert(0, pjoin(BASE_DIR.parent, "apps"))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-b8typuig!wf(+_tu)ba(3^o3%fr&la05ue&6n57n#)wa59!td("

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "simpleui",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "ocr",
    "users",
    "rest_framework",
    "database",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    # "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "server.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [pjoin(BASE_DIR.parent, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "server.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"

# 配置静态文件加载路径
STATICFILES_DIRS = [os.path.join(BASE_DIR.parent, "static")]

# 媒体上传文件路径
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR.parent, "media")

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "file": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": pjoin(BASE_DIR, "logs/debug.log"),
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file"],
            "level": "DEBUG",
            "propagate": True,
        },
    },
}


# 指定本项目用户模型类
AUTH_USER_MODEL = "users.User"

# 指定自定义的用户认证后端
AUTHENTICATION_BACKENDS = ["users.utils.UsernameMobileAuthBackend"]


################## SimpleUI 配置 #################
SIMPLEUI_LOGO = "https://tuchuang-1301374207.cos.ap-nanjing.myqcloud.com/img/logo.png"
SIMPLEUI_HOME_INFO = False
SIMPLEUI_HOME_TITLE = "保险单据智能处理系统"
# https://fontawesome.com/icons
SIMPLEUI_HOME_ICON = "fa fa-cloud"


SIMPLEUI_CONFIG = {
    "system_keep": False,
    "menu_display": [
        "用户管理",
        "数据管理",
    ],  # 开启排序和过滤功能, 不填此字段为默认排序和全部显示, 空列表[] 为全部不显示.
    "dynamic": True,  # 设置是否开启动态菜单, 默认为False. 如果开启, 则会在每次用户登陆时动态展示菜单内容
    "menus": [
        {
            "app": "users",
            "name": "用户管理",
            "icon": "fas fa-user-shield",
            "models": [
                {"name": "用户", "icon": "fa fa-user", "url": "users/user/"},
                {
                    "name": "组",
                    "icon": "fa-solid fa-group-arrows-rotate",
                    "url": "auth/group/",
                },
            ],
        },
        {
            "name": "数据管理",
            "icon": "fa fa-desktop",
            "app": "database",
            "models": [
                {
                    "name": "保险单据",
                    "url": "database/insurancedocument",
                    # "icon": "far fa-surprise",
                },
                {
                    "name": "保单类型",
                    "url": "database/insurancedocumenttype",
                    # "icon": "far fa-surprise",
                },
                {
                    "name": "保单分析结果",
                    "url": "database/keyinformation",
                },
            ],
        },
    ],
}
